# place project specific paths in variables to make the rest of the script more generic
variables:
  EXE_RELEASE_FOLDER: 'Pkcs11Interop\src\Pkcs11Interop'
  MSI_RELEASE_FOLDER: 'Setup\bin\Release'
  TEST_FOLDER: 'Pkcs11Interop\src\Pkcs11Interop\Pkcs11InteropTests\bin\Release\'
  DEPLOY_FOLDER: 'P:\Projects\YourApp\Builds'
  
  NUGET_PATH: 'C:\NuGet\nuget.exe'
  MSBUILD_PATH: 'Pkcs11Interop\build\build-net40.bat --with-tests'
  NUNIT_PATH: 'Pkcs11Interop\src\Pkcs11Interop\packages\NUnit.2.6.4\lib\nunit.framework.dll'

stages:
  - build
  - test
  - deploy

build_job:
  stage: build
  only:
    - tags # the build process will only be started by git tag commits
  script:
  
    - '& "$env:MSBUILD_PATH" /p:Configuration=Release' # build the project
  artifacts:
    expire_in: 1 week # save gitlab server space, we copy the files we need to deploy folder later on
    paths:
      - '$env:EXE_RELEASE_FOLDER\YourApp.exe' # saving exe to copy to deploy folder
      - '$env:MSI_RELEASE_FOLDER\YourApp Setup.msi' # saving msi to copy to deploy folder
      - '$env:TEST_FOLDER\' # saving entire Test project so NUnit can run tests 

test_job:
  stage: test
  only:
    - tags
  script:
    - '& "$env:NUNIT_PATH" ".\$env:TEST_FOLDER\Pkcs11InteropTests.dll"' # running NUnit tests
  artifacts:
    expire_in: 1 week # save gitlab server space, we copy the files we need to deploy folder later on
    paths:
      - '.\TestResult.xml' # saving NUnit results to copy to deploy folder
  dependencies:
    - build_job

deploy_job:
  stage: deploy
  only:
    - tags
  script:
    # Compose a folder for each release based on commit tag.
    # Assuming your tag is Rev1.0.0.1, and your last commit message is 'First commit'
    # the artifact files will be copied to:
    # P:\Projects\YourApp\Builds\Rev1.0.0.1 - First commit\
    - '$commitSubject = git log -1 --pretty=%s'
    - '$deployFolder = $($env:DEPLOY_FOLDER) + "\" + $($env:CI_BUILD_TAG) + " - " + $commitSubject + "\"'

    # xcopy takes care of recursively creating required folders
    - 'xcopy /y ".\$env:EXE_RELEASE_FOLDER\YourApp.exe" "$deployFolder"'
    - 'xcopy /y ".\$env:MSI_RELEASE_FOLDER\YourApp Setup.msi" "$deployFolder"'
    - 'xcopy /y ".\TestResult.xml" "$deployFolder"'

  dependencies:
    - build_job
    - test_job
  
